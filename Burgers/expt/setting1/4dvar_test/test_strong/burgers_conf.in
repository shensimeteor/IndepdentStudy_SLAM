model = {
   burgers = {
       nx = 1000;
       R = 1e-6;
       dx = 40000.;
       dt = 600.;

       bc_option = 2; //1: fixed, 2: periodical
       bc_fixed_value = 0. // only used when bc_option == 1

       linear_option = 2; //1: linear, 2: nonlinear
       linear_velocity = 10. // only used when linear_option == 1

       numeric_option = 1; //1: frogleap, 2: forward

       stochastic_option = 1; // 1: none, 2: gaussian err
       //below 4, only used when stochastic_option == 2
       stochastic_proc_err_mean = 0.;   
       stochastic_proc_err_stdv = 0.; 
       preset_seed = false; 
       seed = 0; //only used when preset_seed == true
   };
};

model_run = {
   init_condition_pattern = 1; // 1: cos 1-wave, 0: read from file
   init_condition_v0 = -20; //default -20, works for init_condition_pattern > 0, 
   init_condition_file = ""; // saves Xs[:,nx], works for init_condition_pattern = 0
   n_steps = 1440; //
   output_x_ratio = 1; //default 1
   output_t_ratio = 1; //default 1
   output_filename = "test.bin";
}

//for slam
da_experiment = {
    spinup_steps = 0;
    window_steps = 288;
    xbs_file = " ";
    obs_file = " ";
    xas_file = " ";
    xb0_constraint = false; 
    xb0_err_stdv = 0.05; 
    proc_err_stdv = 0.05;
    max_num_iterations = 10;
};

da_experiment_cost_groups = {
    output_cost_groups = true; 
    output_obs_subgroups = true;
    obs_subgroup_size = 20; 
    output_proc_subgroups = true;
    proc_subgroup_size = 6000;
    xb_cost_filename = "cost_groups_xb.csv";
    xa_cost_filename = "cost_groups_xa.csv";
}

//for 4dvar
da_4dvar_experiment = {
   window_steps = 288; //whole window contains 288 model integration steps
   da_steps_unit = 6; //every 6 model integration steps will be consider as a da step, i.e. Q/obs will be ready for each da step
   weak_constraint = true; //strong or weak constraint
   xb0_file = "xb0.bin";
   obs_file = "obs.csv";
   xas_file = "xas.bin";
   cov_dir = "cov"; //inside dir, will have B0_modes.bin, Q<t>_modes.bin, t=1,...,n_da_step
   B0_inflate_factor = 0.06;
   Qt_inflate_factor = 1.0; 
   max_num_iterations = 10;
}

